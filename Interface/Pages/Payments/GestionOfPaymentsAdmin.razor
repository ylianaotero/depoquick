@page "/GestionOfPaymentsAdmin"
@using BusinessLogic
@using BusinessLogic.Exceptions.ReservationControllerExceptions
@using DepoQuick.Domain
@inject Session Session
@inject DepoQuickContext DepoQuickContext

<html lang="es">
  <head>
      <meta charset="utf-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
  </head>

    <body>

        <h3>Gestión de reservas</h3>


        <table class="table">
            <thead>
            <tr>
                <th>Cliente</th>
                <th>Depósito</th>
                <th>Desde</th>
                <th>Hasta</th>
                <th>Estado del Pago</th>
            </tr>
            </thead>
            <tbody>
            @foreach (Reservation reservation in _listOfReservations)
            {
                <tr>
                    @{
                        int clientId = DepoQuickContext.Entry(reservation).Property<int>("ClientId").CurrentValue;
                        string clientName = DepoQuickContext.Clients.Find(clientId).Name;
                                            
                        int depositId = DepoQuickContext.Entry(reservation).Property<int>("DepositId").CurrentValue;
                    }
                    <td>@clientName</td>
                    <td>Depósito @depositId</td>
                    <td>@reservation.Date.GetInitialDate().ToString("dd/MM/yyyy")</td>
                    <td>@reservation.Date.GetFinalDate().ToString("dd/MM/yyyy")</td>
                    
                    @{
                        GetPayment(reservation);
                    }
                    
                    @if (reservation.Status == -1)
                    {
                        <td>
                            <button class="btn btn-secondary btn-sm">Rechazada</button>
                        </td>
                    }
                    else
                    {
                        
                        @if (_paymentOfReservation == null)
                        {
                            <td>
                                <button class="btn btn-secondary btn-sm">Pendiente de Pago</button>
                            </td>
                        }
                        else
                        {
                            @if (_paymentOfReservation.Status == "reservado")
                            {
                                <td>
                                    <button class="btn btn-primary btn-sm">Pendiente de Aprobación</button>
                                </td>
                            }
                            else
                            {
                                @if (_paymentOfReservation.Status == "capturado")
                                {
                                    <td>
                                        <button class="btn btn-success btn-sm">Pago Aprobado</button>
                                    </td>
                                }
                            }
                        }
                    }
                </tr>
            }
            </tbody>
        </table>
    </body>
</html>




@code {
    ReservationController _reservationController;
    private List<Reservation> _listOfReservations;
    
    private Payment _paymentOfReservation;
    
    
    protected override void OnInitialized()
    {
        _reservationController = new ReservationController(DepoQuickContext, Session);
        _listOfReservations = _reservationController.GetReservations();
    }
    
    private void GetPayment(Reservation reservation)
    {
        try
        {
            _paymentOfReservation = _reservationController.GetPaymentOfReservation(reservation);
        }
        catch (PaymentNotFoundException paymentNotFoundException)
        {
            _paymentOfReservation = null; 
        }
        
        
    }
    
}
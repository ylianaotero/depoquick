@page "/Login"
@using BusinessLogic
@using DepoQuick.Domain
@using Blazorise
@using DepoQuick.Domain.Exceptions.MemoryDataBaseExceptions
@inject MemoryDataBase MemoryDataBase
@inject IJSRuntime JSRuntime


<html lang="es" xmlns="http://www.w3.org/1999/html">
  <head>
      <meta charset="utf-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
  </head>

<body>

@if (_showAlertUserDoesNotExist)
{
  <br>
   <div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">El usuario ingresado no existe</h4>
  </div>
  <br>
}

<h3>¡Bienvenido!</h3>
<form>
    <div class="form-group">
        <label for="email">Correo Electrónico:</label>
        <input type="email" class="form-control" id="email" @bind-value="_email" required/>
    </div>
    <div class="form-group">
        <label for="password">Contraseña:</label>
        <input type="password" class="form-control" id="password" @bind-value="_password"required/>
    </div>
    <br><br/>
    <button type="submit" class="btn btn-primary" @onclick="ShowAlert">Login</button>
    @if (logged)
    {
        <div class="alert alert-success" role="alert">
            El usuario ingresó al sistema
        </div>
    }
</form>
</body>
</html>

@code {
    bool logged = false;
    private bool _showAlertUserDoesNotExist;
    private Controller _controller;
    private String _email;
    private String _password;
    private User _loggedUser;
    
    /*
     protected override void OnInitialized()
    {
        _loggedUser = MemoryDataBase.GetActiveUser();
    }
     */
        
    public void LoginUser()
    {
        _controller = new Controller(MemoryDataBase);
        _controller.LoginUser(_email,_password);
        //TODO: Ver si queremos analizar de alguna forma en especifico que el usuario se haya ingresado correctamente
        logged = true;
    }
    
    private void ShowAlert()
    {
        HideAllAlerts();
        if (UserExists())
        {
            LoginUser();
        }
        else
        {
            _showAlertUserDoesNotExist = true;
        }
        
    }
    
    private void HideAllAlerts()
    {
        _showAlertUserDoesNotExist = false;
    }

    private bool UserExists()
    {
        try
        {
            _controller.LoginUser(_email,_password);
            return true;
        }
        catch (UserDoesNotExistException userDoesNotExistException)
        {
            return false;
        }
    }
    
}